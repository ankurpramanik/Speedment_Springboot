package com.ada.speedment.zdb.training.public_.studentmarks.generated;

import com.ada.speedment.zdb.training.public_.studentmarks.StudentMarks;
import com.ada.speedment.zdb.training.public_.studentmarks.StudentMarksImpl;
import com.ada.speedment.zdb.training.public_.studentmarks.StudentMarksManager;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.manager.AbstractManager;
import com.speedment.runtime.field.Field;

import java.util.stream.Stream;

/**
 * The generated base implementation for the manager of every {@link
 * com.ada.speedment.zdb.training.public_.studentmarks.StudentMarks} entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedStudentMarksManagerImpl 
extends AbstractManager<StudentMarks> 
implements GeneratedStudentMarksManager {
    
    private final TableIdentifier<StudentMarks> tableIdentifier;
    
    protected GeneratedStudentMarksManagerImpl() {
        this.tableIdentifier = TableIdentifier.of("Training", "public", "StudentMarks");
    }
    
    @Override
    public StudentMarks create() {
        return new StudentMarksImpl();
    }
    
    @Override
    public TableIdentifier<StudentMarks> getTableIdentifier() {
        return tableIdentifier;
    }
    
    @Override
    public Stream<Field<StudentMarks>> fields() {
        return StudentMarksManager.FIELDS.stream();
    }
    
    @Override
    public Stream<Field<StudentMarks>> primaryKeyFields() {
        return Stream.of(
            StudentMarks.MARKS_ID
        );
    }
}
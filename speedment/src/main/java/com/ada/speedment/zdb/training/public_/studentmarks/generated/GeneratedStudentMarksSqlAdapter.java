package com.ada.speedment.zdb.training.public_.studentmarks.generated;

import static com.speedment.runtime.core.util.ResultSetUtil.getLong;

import java.sql.ResultSet;
import java.sql.SQLException;

import com.ada.speedment.zdb.training.public_.studentmarks.StudentMarks;
import com.ada.speedment.zdb.training.public_.studentmarks.StudentMarksImpl;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.component.SqlAdapter;
import com.speedment.runtime.core.db.SqlFunction;

/**
 * The generated Sql Adapter for a {@link
 * com.ada.speedment.zdb.training.public_.studentmarks.StudentMarks} entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedStudentMarksSqlAdapter implements SqlAdapter<StudentMarks> {
    
    private final TableIdentifier<StudentMarks> tableIdentifier;
    
    protected GeneratedStudentMarksSqlAdapter() {
        this.tableIdentifier = TableIdentifier.of("Training", "public", "StudentMarks");
    }
    
    protected StudentMarks apply(ResultSet resultSet, int offset) throws SQLException {
        return createEntity()
            .setMarksId(   getLong(resultSet, 1 + offset))
            .setStudentId( getLong(resultSet, 2 + offset))
            .setPhysics(   getLong(resultSet, 3 + offset))
            .setChemistry( getLong(resultSet, 4 + offset))
            .setMaths(     getLong(resultSet, 5 + offset))
            .setEnglish(   getLong(resultSet, 6 + offset))
            ;
    }
    
    protected StudentMarksImpl createEntity() {
        return new StudentMarksImpl();
    }
    
    @Override
    public TableIdentifier<StudentMarks> identifier() {
        return tableIdentifier;
    }
    
    @Override
    public SqlFunction<ResultSet, StudentMarks> entityMapper() {
        return entityMapper(0);
    }
    
    @Override
    public SqlFunction<ResultSet, StudentMarks> entityMapper(int offset) {
        return rs -> apply(rs, offset);
    }
}